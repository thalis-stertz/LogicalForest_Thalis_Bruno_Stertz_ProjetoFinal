{
  "stats": {
    "suites": 4,
    "tests": 17,
    "passes": 17,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-08T19:16:00.533Z",
    "end": "2022-07-08T19:16:29.230Z",
    "duration": 3428,
    "testsRegistered": 17,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "92322a05-1f42-48c1-8154-6ae57af2457f",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f875852-d54a-4852-bb42-517f7a26a952",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 438,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 200);\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "19f686f2-0bd1-44b1-8e25-5064822894f3",
              "parentUUID": "6f875852-d54a-4852-bb42-517f7a26a952",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19f686f2-0bd1-44b1-8e25-5064822894f3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 438,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b3301faa-60c4-4363-89d2-a9f3f8684723",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8ae6294-42b7-49e7-b6af-4a92cf5f10d5",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "3b4deafe-0089-466f-bbbe-a4e8911711db",
              "parentUUID": "b8ae6294-42b7-49e7-b6af-4a92cf5f10d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "d7b8848c-3755-4bd8-b214-5f6f1ed13229",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 279,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _serverest.default.salvarIdProduto(res);\n});",
                  "err": {},
                  "uuid": "23670a48-b084-4957-a016-bae6bd7a2ad9",
                  "parentUUID": "d7b8848c-3755-4bd8-b214-5f6f1ed13229",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar produto por ID",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve buscar produto por ID",
                  "timedOut": null,
                  "duration": 116,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.localizarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 200);\n});",
                  "err": {},
                  "uuid": "64ac2366-3afe-4a75-99f5-b1e405d3042f",
                  "parentUUID": "d7b8848c-3755-4bd8-b214-5f6f1ed13229",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve excluir produto com sucesso",
                  "timedOut": null,
                  "duration": 99,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'delete-produtos-by-id', 200);\n});",
                  "err": {},
                  "uuid": "52000355-bc4b-4046-85bc-1a752765b6fe",
                  "parentUUID": "d7b8848c-3755-4bd8-b214-5f6f1ed13229",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "23670a48-b084-4957-a016-bae6bd7a2ad9",
                "64ac2366-3afe-4a75-99f5-b1e405d3042f",
                "52000355-bc4b-4046-85bc-1a752765b6fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 494,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "3b4deafe-0089-466f-bbbe-a4e8911711db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "34ae99eb-b191-4460-8ca1-a86a3b6bd0ff",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bd0fd984-08cc-4fc7-9645-2742ec5e3632",
          "title": "Casos de teste sobre a rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os carrinhos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Deve buscar todos os carrinhos cadastrados",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  _validaServerest.default.validarBuscaDeCarrinhos(res);\n});",
              "err": {},
              "uuid": "983e4529-d8cd-4d83-958d-e53829ff31ae",
              "parentUUID": "bd0fd984-08cc-4fc7-9645-2742ec5e3632",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "112d3dcc-e7de-4586-896b-a665ca864614",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve excluir carrinho se existir",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso Deve excluir carrinho se existir",
                  "timedOut": null,
                  "duration": 167,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos', 200);\n});",
                  "err": {},
                  "uuid": "74a9f671-3239-46d8-a0d5-647725111503",
                  "parentUUID": "112d3dcc-e7de-4586-896b-a665ca864614",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve postar um novo carrinho com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso Deve postar um novo carrinho com sucesso",
                  "timedOut": null,
                  "duration": 100,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarCarrinhoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-carrinhos', 201);\n});",
                  "err": {},
                  "uuid": "03c92c92-cee0-487b-ae20-5b85ce843c4c",
                  "parentUUID": "112d3dcc-e7de-4586-896b-a665ca864614",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve concluir compra",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso Deve concluir compra",
                  "timedOut": null,
                  "duration": 124,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.finalizarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos', 200);\n});",
                  "err": {},
                  "uuid": "e1a620c5-5eec-423a-be32-8620b5a7bb3f",
                  "parentUUID": "112d3dcc-e7de-4586-896b-a665ca864614",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "74a9f671-3239-46d8-a0d5-647725111503",
                "03c92c92-cee0-487b-ae20-5b85ce843c4c",
                "e1a620c5-5eec-423a-be32-8620b5a7bb3f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 391,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "983e4529-d8cd-4d83-958d-e53829ff31ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 76,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7047b7dc-e815-4009-b940-75393b499644",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a924c4f-87c4-479d-b186-63ca82a86bb5",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuarios cadastrados na Serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuarios cadastrados na Serverest",
              "timedOut": null,
              "duration": 711,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "6b715efb-c561-49a4-84c7-51c0c8235cd7",
              "parentUUID": "1a924c4f-87c4-479d-b186-63ca82a86bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um novo usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve cadastrar um novo usuário com sucesso",
              "timedOut": null,
              "duration": 442,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.criarUsuarioComSucesso().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  expect(res.body.message).to.be.eq('Cadastro realizado com sucesso');\n  _serverest.default.salvarIdUsuario(res);\n});",
              "err": {},
              "uuid": "135a5171-1609-4f75-957c-41883259d445",
              "parentUUID": "1a924c4f-87c4-479d-b186-63ca82a86bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 200);\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "1a3ad888-f8c6-46f0-9870-fa84eebb9fdc",
              "parentUUID": "1a924c4f-87c4-479d-b186-63ca82a86bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve postar um novo usuário administrador existente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve postar um novo usuário administrador existente",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 400);\n  expect(res.body.message).to.be.eq('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "1e6ca981-774c-4a3a-911b-98866abea80f",
              "parentUUID": "1a924c4f-87c4-479d-b186-63ca82a86bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar um usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar um usuário com sucesso",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioComSucesso().then(res => {\n  cy.contractValidation(res, 'get-usuarios-by-id', 200);\n  expect(res.body._id).to.be.eq(`${Cypress.env(\"idUser\")}`);\n});",
              "err": {},
              "uuid": "f6f57583-ce80-47aa-8c61-346ed66140f2",
              "parentUUID": "1a924c4f-87c4-479d-b186-63ca82a86bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deletar usuário",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deletar usuário",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.deletarUsuarioComSucesso().then(res => {\n  cy.contractValidation(res, 'delete-usuarios-by-id', 200);\n});",
              "err": {},
              "uuid": "4cf9d651-be46-4919-a2e7-08f4a1529d53",
              "parentUUID": "1a924c4f-87c4-479d-b186-63ca82a86bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar em um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar em um arquivo json",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let inteiro = _factory.default.gerarInteiroAleatorio();\n_serverest.default.buscarUsuarios().then(res => {\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[inteiro]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "f0455b9f-d088-493e-87a9-def01dc8feb0",
              "parentUUID": "1a924c4f-87c4-479d-b186-63ca82a86bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar um usuário de um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar um usuário de um arquivo json",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n  _serverest.default.logar(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 200);\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "b18282c6-aab1-4fd1-aa2d-74aaff4c53d7",
              "parentUUID": "1a924c4f-87c4-479d-b186-63ca82a86bb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b715efb-c561-49a4-84c7-51c0c8235cd7",
            "135a5171-1609-4f75-957c-41883259d445",
            "1a3ad888-f8c6-46f0-9870-fa84eebb9fdc",
            "1e6ca981-774c-4a3a-911b-98866abea80f",
            "f6f57583-ce80-47aa-8c61-346ed66140f2",
            "4cf9d651-be46-4919-a2e7-08f4a1529d53",
            "f0455b9f-d088-493e-87a9-def01dc8feb0",
            "b18282c6-aab1-4fd1-aa2d-74aaff4c53d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1874,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}