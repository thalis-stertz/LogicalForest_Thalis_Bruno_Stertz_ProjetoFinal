{
  "stats": {
    "suites": 9,
    "tests": 48,
    "passes": 48,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-26T12:44:32.768Z",
    "end": "2022-07-26T12:45:28.972Z",
    "duration": 5223,
    "testsRegistered": 48,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d024423e-1687-45fb-8b8d-827ff919b82f",
      "title": "",
      "fullFile": "cypress/integration/2.usuarios.spec.js",
      "file": "cypress/integration/2.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5cd6e4e2-a473-4e4c-9655-c3dfc59f9093",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CTFP02 - Deve buscar todos os usuarios cadastrados na Serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CTFP02 - Deve buscar todos os usuarios cadastrados na Serverest",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, 'get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "a6e7604b-d709-4359-b01f-60730d3f41eb",
              "parentUUID": "5cd6e4e2-a473-4e4c-9655-c3dfc59f9093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTFP03 - Deve cadastrar um novo usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CTFP03 - Deve cadastrar um novo usuário com sucesso",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.criarUsuarioComSucesso().then(res => {\n  cy.contractValidation(res, 'post-usuarios', 201);\n  expect(res.body.message).to.be.eq('Cadastro realizado com sucesso');\n  _serverest.default.salvarIdUsuario(res);\n});",
              "err": {},
              "uuid": "9995bade-22e4-4a8f-bc92-de4ed8ca7d12",
              "parentUUID": "5cd6e4e2-a473-4e4c-9655-c3dfc59f9093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTFP04 - Deve buscar um usuário com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CTFP04 - Deve buscar um usuário com sucesso",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioComSucesso().then(res => {\n  cy.contractValidation(res, 'get-usuarios-by-id', 200);\n  expect(res.body._id).to.be.eq(`${Cypress.env(\"idUser\")}`);\n});",
              "err": {},
              "uuid": "4110ad26-514f-49c6-9132-0234d3ef3004",
              "parentUUID": "5cd6e4e2-a473-4e4c-9655-c3dfc59f9093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTFP05 - Deletar usuário",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CTFP05 - Deletar usuário",
              "timedOut": null,
              "duration": 50,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.deletarUsuarioComSucesso().then(res => {\n  cy.contractValidation(res, 'delete-usuarios-by-id', 200);\n});",
              "err": {},
              "uuid": "a42055ad-f97d-467f-9b82-6e8fe624d4b5",
              "parentUUID": "5cd6e4e2-a473-4e4c-9655-c3dfc59f9093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTFP06 - Deve editar um usuário existente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest CTFP06 - Deve editar um usuário existente",
              "timedOut": null,
              "duration": 41,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.editarUsuario().then(res => {\n  cy.contractValidation(res, 'put-usuarios-by-id', 200);\n  expect(res.body.message).to.be.eq('Registro alterado com sucesso');\n  _serverest.default.salvarIdUsuario(res);\n});",
              "err": {},
              "uuid": "0231b650-c7e5-40b7-9cff-de7a8151942e",
              "parentUUID": "5cd6e4e2-a473-4e4c-9655-c3dfc59f9093",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "5be9132e-d308-4285-a54f-384b98ec9a6a",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "CTFP17 - Deve buscar e salvar em um arquivo json",
                  "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Logar com sucesso CTFP17 - Deve buscar e salvar em um arquivo json",
                  "timedOut": null,
                  "duration": 161,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let inteiro = _factory.default.gerarInteiroAleatorio();\n_serverest.default.buscarUsuarios().then(res => {\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[inteiro]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
                  "err": {},
                  "uuid": "d86c4d45-2f01-4317-8c42-d385d9f6b2a8",
                  "parentUUID": "5be9132e-d308-4285-a54f-384b98ec9a6a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFP18 - Deve buscar um usuário de um arquivo json",
                  "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Logar com sucesso CTFP18 - Deve buscar um usuário de um arquivo json",
                  "timedOut": null,
                  "duration": 91,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n  _serverest.default.logar(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 200);\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
                  "err": {},
                  "uuid": "421c6161-8841-4be5-96ff-32411619d5e9",
                  "parentUUID": "5be9132e-d308-4285-a54f-384b98ec9a6a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d86c4d45-2f01-4317-8c42-d385d9f6b2a8",
                "421c6161-8841-4be5-96ff-32411619d5e9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 252,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "a6e7604b-d709-4359-b01f-60730d3f41eb",
            "9995bade-22e4-4a8f-bc92-de4ed8ca7d12",
            "4110ad26-514f-49c6-9132-0234d3ef3004",
            "a42055ad-f97d-467f-9b82-6e8fe624d4b5",
            "0231b650-c7e5-40b7-9cff-de7a8151942e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 493,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "29b13ac4-9dfa-43fc-8c80-93ee84e2b1e5",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b91d49c2-e83a-48f5-ad9f-522798823cf1",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CTFP07 - Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest CTFP07 - Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "29fdc452-33a3-4163-9688-6d2623d2ba26",
              "parentUUID": "b91d49c2-e83a-48f5-ad9f-522798823cf1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f4c8bf4f-10e9-417c-83cb-497b9b349f05",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "CTFP08 - Deve cadastrar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso CTFP08 - Deve cadastrar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 188,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _serverest.default.salvarIdProduto(res);\n});",
                  "err": {},
                  "uuid": "f5a4ed5c-5c0d-4c6b-9967-f549d7dbc67f",
                  "parentUUID": "f4c8bf4f-10e9-417c-83cb-497b9b349f05",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFP09 - Deve buscar produto por ID",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso CTFP09 - Deve buscar produto por ID",
                  "timedOut": null,
                  "duration": 86,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.localizarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 200);\n});",
                  "err": {},
                  "uuid": "cfb695ec-7c81-477a-a1a5-484eba13b6c3",
                  "parentUUID": "f4c8bf4f-10e9-417c-83cb-497b9b349f05",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFP10 - Deve editar um produto existente",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso CTFP10 - Deve editar um produto existente",
                  "timedOut": null,
                  "duration": 89,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProduto().then(res => {\n  cy.contractValidation(res, 'put-produtos-by-id', 200);\n  expect(res.body.message).to.be.eq('Registro alterado com sucesso');\n  _serverest.default.salvarIdProduto(res);\n});",
                  "err": {},
                  "uuid": "9c3f713e-2982-4b51-9709-b0fa593ccec2",
                  "parentUUID": "f4c8bf4f-10e9-417c-83cb-497b9b349f05",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFP11 - Deve excluir produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso CTFP11 - Deve excluir produto com sucesso",
                  "timedOut": null,
                  "duration": 84,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'delete-produtos-by-id', 200);\n});",
                  "err": {},
                  "uuid": "f36cd425-acf9-4b4b-b9a6-9202a79d62db",
                  "parentUUID": "f4c8bf4f-10e9-417c-83cb-497b9b349f05",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f5a4ed5c-5c0d-4c6b-9967-f549d7dbc67f",
                "cfb695ec-7c81-477a-a1a5-484eba13b6c3",
                "9c3f713e-2982-4b51-9709-b0fa593ccec2",
                "f36cd425-acf9-4b4b-b9a6-9202a79d62db"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 447,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "29fdc452-33a3-4163-9688-6d2623d2ba26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 111,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "95a91ef8-a013-4e73-8a1f-c12a896a79d1",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5b7243e4-a353-4efe-94b3-0108b0f6ea02",
          "title": "Casos de teste sobre a rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CTFP12 - Deve buscar todos os carrinhos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest CTFP12 - Deve buscar todos os carrinhos cadastrados",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarCarrinhos().then(res => {\n  _validaServerest.default.validarBuscaDeCarrinhos(res);\n});",
              "err": {},
              "uuid": "e491ebef-6cd0-4ad3-94d8-475a1be4880c",
              "parentUUID": "5b7243e4-a353-4efe-94b3-0108b0f6ea02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "c66d7922-4f7d-49d2-8934-e733c95dcdf4",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve excluir carrinho se existir",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso Deve excluir carrinho se existir",
                  "timedOut": null,
                  "duration": 177,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos', 200);\n});",
                  "err": {},
                  "uuid": "827840d1-ac44-4b42-9763-1cd9b35d6a34",
                  "parentUUID": "c66d7922-4f7d-49d2-8934-e733c95dcdf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFP13 - Deve postar um novo carrinho com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso CTFP13 - Deve postar um novo carrinho com sucesso",
                  "timedOut": null,
                  "duration": 91,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarCarrinhoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-carrinhos', 201);\n  _serverest.default.salvarIdCarrinho(res);\n});",
                  "err": {},
                  "uuid": "431fad49-6291-4fdb-97f5-c05b6b81d5c9",
                  "parentUUID": "c66d7922-4f7d-49d2-8934-e733c95dcdf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFP14 - Deve buscar carrinho pelo ID",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso CTFP14 - Deve buscar carrinho pelo ID",
                  "timedOut": null,
                  "duration": 66,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.localizarCarrinhoComSucesso().then(res => {\n  expect(res.status).to.be.eq(200);\n});",
                  "err": {},
                  "uuid": "a1ea87b3-8c64-4be6-9a9b-859c14018ce9",
                  "parentUUID": "c66d7922-4f7d-49d2-8934-e733c95dcdf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFP15 - Deve concluir compra",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso CTFP15 - Deve concluir compra",
                  "timedOut": null,
                  "duration": 77,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.finalizarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos', 200);\n});",
                  "err": {},
                  "uuid": "392d7502-f7d2-49e6-af62-30e4f78e0676",
                  "parentUUID": "c66d7922-4f7d-49d2-8934-e733c95dcdf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFP16 - Deve cancelar a compra e retornar os produtos para o estoque",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso CTFP16 - Deve cancelar a compra e retornar os produtos para o estoque",
                  "timedOut": null,
                  "duration": 124,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos-cancelar', 200);\n});",
                  "err": {},
                  "uuid": "0c630dc2-ac70-45ed-ba05-51c8993715f7",
                  "parentUUID": "c66d7922-4f7d-49d2-8934-e733c95dcdf4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "827840d1-ac44-4b42-9763-1cd9b35d6a34",
                "431fad49-6291-4fdb-97f5-c05b6b81d5c9",
                "a1ea87b3-8c64-4be6-9a9b-859c14018ce9",
                "392d7502-f7d2-49e6-af62-30e4f78e0676",
                "0c630dc2-ac70-45ed-ba05-51c8993715f7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 535,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "e491ebef-6cd0-4ad3-94d8-475a1be4880c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 88,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ff79be8f-d499-4d10-aa6b-fdb1d91af960",
      "title": "",
      "fullFile": "cypress/integration/5.login.negativo.spec.js",
      "file": "cypress/integration/5.login.negativo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f49731af-0803-4436-8c6b-754c60d6c9ff",
          "title": "Casos de teste negativos sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CTFN01 - Não deve realizar login",
              "fullTitle": "Casos de teste negativos sobre a rota /login da API Serverest CTFN01 - Não deve realizar login",
              "timedOut": null,
              "duration": 216,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverestNegativo.default.logarSemSucesso().then(res => {\n  cy.contractValidation(res, 'post-login', 401);\n  expect(res.body.message).to.be.eq('Email e/ou senha inválidos');\n  _validaServerest.default.validarLoginSemSucesso(res);\n});",
              "err": {},
              "uuid": "be6aedba-60c5-41ce-a73e-cf52f541d23d",
              "parentUUID": "f49731af-0803-4436-8c6b-754c60d6c9ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be6aedba-60c5-41ce-a73e-cf52f541d23d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 216,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "32ea969a-f26b-4200-819e-a3d80f8eb971",
      "title": "",
      "fullFile": "cypress/integration/6.usuario.negativo.spec.js",
      "file": "cypress/integration/6.usuario.negativo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d2a59c16-4052-40e3-aeec-51a0da4edc00",
          "title": "Casos de teste negativos sobre a rota /usuarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CTFN02 - Deve falhar em cadastrar um novo usuário com um email que já está sendo utilizado",
              "fullTitle": "Casos de teste negativos sobre a rota /usuarios CTFN02 - Deve falhar em cadastrar um novo usuário com um email que já está sendo utilizado",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverestNegativo.default.buscarEmailDeUsuario();\ncy.get('@usuarioEmail').then(email => {\n  _serverestNegativo.default.criarUsuarioSemSucesso(email.email).then(res => {\n    cy.contractValidation(res, 'post-usuarios', 400);\n    expect(res.body.message).to.be.eq('Este email já está sendo usado');\n  });\n});",
              "err": {},
              "uuid": "3f3e75f3-d58f-4288-ab74-750f718f9570",
              "parentUUID": "d2a59c16-4052-40e3-aeec-51a0da4edc00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTFN03 - Deve falhar ao tentar encontrar um usuário pelo ID",
              "fullTitle": "Casos de teste negativos sobre a rota /usuarios CTFN03 - Deve falhar ao tentar encontrar um usuário pelo ID",
              "timedOut": null,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverestNegativo.default.buscarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, 'get-usuarios-by-id', 400);\n  expect(res.body.message).to.be.eq('Usuário não encontrado');\n});",
              "err": {},
              "uuid": "28528ea7-26e0-4d9a-9468-098ac0dc08f0",
              "parentUUID": "d2a59c16-4052-40e3-aeec-51a0da4edc00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTFN05 - Deve falhar em editar um usuário",
              "fullTitle": "Casos de teste negativos sobre a rota /usuarios CTFN05 - Deve falhar em editar um usuário",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverestNegativo.default.buscarEmailDeUsuario();\ncy.get('@usuarioEmail').then(email => {\n  _serverestNegativo.default.editarUsuarioSemSucesso(email.email).then(res => {\n    cy.contractValidation(res, 'put-usuarios-by-id', 400);\n    expect(res.body.message).to.be.eq('Este email já está sendo usado');\n  });\n});",
              "err": {},
              "uuid": "e2a93e00-9063-42f6-a91d-3eda61cdf5db",
              "parentUUID": "d2a59c16-4052-40e3-aeec-51a0da4edc00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "007c8cae-9ada-47b1-aa87-cd65830e0a2f",
              "title": "Falhar ao excluir um usuário com carrinho",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve excluir carrinho se existir",
                  "fullTitle": "Casos de teste negativos sobre a rota /usuarios Falhar ao excluir um usuário com carrinho Deve excluir carrinho se existir",
                  "timedOut": null,
                  "duration": 85,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos', 200);\n});",
                  "err": {},
                  "uuid": "70ab49c6-0998-49a8-a560-80cd7bb62ed2",
                  "parentUUID": "007c8cae-9ada-47b1-aa87-cd65830e0a2f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve postar um novo carrinho com sucesso",
                  "fullTitle": "Casos de teste negativos sobre a rota /usuarios Falhar ao excluir um usuário com carrinho Deve postar um novo carrinho com sucesso",
                  "timedOut": null,
                  "duration": 79,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarCarrinhoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-carrinhos', 201);\n});",
                  "err": {},
                  "uuid": "6917a188-3cb2-4d84-b9dc-55c721a8ece2",
                  "parentUUID": "007c8cae-9ada-47b1-aa87-cd65830e0a2f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFN04 - Deve falhar ao tentar excluir um usuário com carrinho cadastrado",
                  "fullTitle": "Casos de teste negativos sobre a rota /usuarios Falhar ao excluir um usuário com carrinho CTFN04 - Deve falhar ao tentar excluir um usuário com carrinho cadastrado",
                  "timedOut": null,
                  "duration": 71,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverestNegativo.default.deletarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, 'delete-usuarios-by-id', 400);\n  expect(res.body.message).to.be.eq('Não é permitido excluir usuário com carrinho cadastrado');\n});",
                  "err": {},
                  "uuid": "b0673df5-b7db-4e74-bf2f-7f7b7c5b6d74",
                  "parentUUID": "007c8cae-9ada-47b1-aa87-cd65830e0a2f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70ab49c6-0998-49a8-a560-80cd7bb62ed2",
                "6917a188-3cb2-4d84-b9dc-55c721a8ece2",
                "b0673df5-b7db-4e74-bf2f-7f7b7c5b6d74"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 235,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "3f3e75f3-d58f-4288-ab74-750f718f9570",
            "28528ea7-26e0-4d9a-9468-098ac0dc08f0",
            "e2a93e00-9063-42f6-a91d-3eda61cdf5db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 250,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "80bc8fe2-caa6-46c2-b3f0-afd77683ebe3",
      "title": "",
      "fullFile": "cypress/integration/7.produtos.negativo.spec.js",
      "file": "cypress/integration/7.produtos.negativo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b1ab739a-fc42-4ddc-8959-f99ad1efd824",
          "title": "Casos de teste negativos sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CTFN07 - Deve falhar ao tentar cadastrar um produto devido a ausência do Token de acesso",
              "fullTitle": "Casos de teste negativos sobre a rota /produtos da API Serverest CTFN07 - Deve falhar ao tentar cadastrar um produto devido a ausência do Token de acesso",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverestNegativo.default.cadastrarProdutoSemToken().then(res => {\n  cy.contractValidation(res, 'post-produtos', 401);\n  expect(res.body.message).to.be.equal('Token de acesso ausente, inválido, expirado ou usuário do token não existe mais');\n});",
              "err": {},
              "uuid": "1303c370-508b-4760-add7-f5512d5de310",
              "parentUUID": "b1ab739a-fc42-4ddc-8959-f99ad1efd824",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTFN11 - Não deve excluir produto devido a falta de Token de acesso",
              "fullTitle": "Casos de teste negativos sobre a rota /produtos da API Serverest CTFN11 - Não deve excluir produto devido a falta de Token de acesso",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverestNegativo.default.deletarProdutoSemToken().then(res => {\n  cy.contractValidation(res, 'delete-produtos-by-id', 401);\n  expect(res.body.message).to.be.eq('Token de acesso ausente, inválido, expirado ou usuário do token não existe mais');\n});",
              "err": {},
              "uuid": "90e3b973-951e-4b70-ba21-dfc6eda0f253",
              "parentUUID": "b1ab739a-fc42-4ddc-8959-f99ad1efd824",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CTFN14 - Não deve editar produto devido a falta de Token de acesso",
              "fullTitle": "Casos de teste negativos sobre a rota /produtos da API Serverest CTFN14 - Não deve editar produto devido a falta de Token de acesso",
              "timedOut": null,
              "duration": 39,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverestNegativo.default.editarProdutoSemToken().then(res => {\n  cy.contractValidation(res, 'put-produtos-by-id', 401);\n  expect(res.body.message).to.be.eq('Token de acesso ausente, inválido, expirado ou usuário do token não existe mais');\n});",
              "err": {},
              "uuid": "35bb3739-29b6-40be-ae4a-5a2745f2801a",
              "parentUUID": "b1ab739a-fc42-4ddc-8959-f99ad1efd824",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "5e5bccff-eee2-45e6-8fd8-83409ba96c26",
              "title": "Deve falhar em encontrar produto",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "CTFN09 - Não deve encontrar o produto",
                  "fullTitle": "Casos de teste negativos sobre a rota /produtos da API Serverest Deve falhar em encontrar produto CTFN09 - Não deve encontrar o produto",
                  "timedOut": null,
                  "duration": 98,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverestNegativo.default.localizarProdutoSemSucesso().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 400);\n  expect(res.body.message).to.be.eq('Produto não encontrado');\n});",
                  "err": {},
                  "uuid": "ad516fb3-bf2f-4192-8b0c-5759f5df5589",
                  "parentUUID": "5e5bccff-eee2-45e6-8fd8-83409ba96c26",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad516fb3-bf2f-4192-8b0c-5759f5df5589"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 98,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "1303c370-508b-4760-add7-f5512d5de310",
            "90e3b973-951e-4b70-ba21-dfc6eda0f253",
            "35bb3739-29b6-40be-ae4a-5a2745f2801a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 316,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "30a39652-8576-492d-bd14-e5de91eb5c1c",
      "title": "",
      "fullFile": "cypress/integration/8.carrinhos.negativo.spec.js",
      "file": "cypress/integration/8.carrinhos.negativo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "39c7ec91-0ab4-4d51-9dc8-bdb8574d7f06",
          "title": "Casos de teste negativos sobre a rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CTFN17 - Deve falhar ao tentar cadastrar carrinho devido a ausência do Token de acesso",
              "fullTitle": "Casos de teste negativos sobre a rota /carrinhos da API Serverest CTFN17 - Deve falhar ao tentar cadastrar carrinho devido a ausência do Token de acesso",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverestNegativo.default.cadastrarCarrinhoSemSucessoSemToken().then(res => {\n  expect(res.status).to.be.eq(401);\n  cy.contractValidation(res, 'post-carrinhos', 401);\n});",
              "err": {},
              "uuid": "5bd87ffd-a88d-4e94-b4b1-760507669697",
              "parentUUID": "39c7ec91-0ab4-4d51-9dc8-bdb8574d7f06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "7e788c86-df7f-4ecb-bbab-3c268b82b6f5",
              "title": "Logar",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "CTFN16 - Deve falhar ao tentar cadastrar carrinho com outro carrinho já cadastrado",
                  "fullTitle": "Casos de teste negativos sobre a rota /carrinhos da API Serverest Logar CTFN16 - Deve falhar ao tentar cadastrar carrinho com outro carrinho já cadastrado",
                  "timedOut": null,
                  "duration": 97,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverestNegativo.default.cadastrarCarrinhoSemSucesso().then(res => {\n  expect(res.status).to.be.eq(400);\n  cy.contractValidation(res, 'post-carrinhos', 400);\n});",
                  "err": {},
                  "uuid": "98641021-23c8-4359-a92e-d1968b46550b",
                  "parentUUID": "7e788c86-df7f-4ecb-bbab-3c268b82b6f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir carrinho se existir",
                  "fullTitle": "Casos de teste negativos sobre a rota /carrinhos da API Serverest Logar Deve excluir carrinho se existir",
                  "timedOut": null,
                  "duration": 113,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos', 200);\n});",
                  "err": {},
                  "uuid": "3e96ccef-3ff7-4c9c-8f34-7e86579e535d",
                  "parentUUID": "7e788c86-df7f-4ecb-bbab-3c268b82b6f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve postar um novo carrinho com sucesso",
                  "fullTitle": "Casos de teste negativos sobre a rota /carrinhos da API Serverest Logar Deve postar um novo carrinho com sucesso",
                  "timedOut": null,
                  "duration": 102,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarCarrinhoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-carrinhos', 201);\n});",
                  "err": {},
                  "uuid": "9f549661-025a-41d0-98b6-78c041922300",
                  "parentUUID": "7e788c86-df7f-4ecb-bbab-3c268b82b6f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFN18 - Deve falhar ao buscar carrinho pelo ID",
                  "fullTitle": "Casos de teste negativos sobre a rota /carrinhos da API Serverest Logar CTFN18 - Deve falhar ao buscar carrinho pelo ID",
                  "timedOut": null,
                  "duration": 130,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverestNegativo.default.localizarCarrinhoSemSucesso().then(res => {\n  expect(res.status).to.be.eq(400);\n  cy.contractValidation(res, 'get-carrinhos-by-id', 400);\n  expect(res.body.message).to.be.eq('Carrinho não encontrado');\n});",
                  "err": {},
                  "uuid": "e842cd72-f558-4fe8-a609-7acbf53423a0",
                  "parentUUID": "7e788c86-df7f-4ecb-bbab-3c268b82b6f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFN19 - Deve falhar em concluir compra",
                  "fullTitle": "Casos de teste negativos sobre a rota /carrinhos da API Serverest Logar CTFN19 - Deve falhar em concluir compra",
                  "timedOut": null,
                  "duration": 82,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverestNegativo.default.naoFinalizarCompra().then(res => {\n  expect(res.status).to.be.eq(401);\n  cy.contractValidation(res, 'delete-carrinhos', 401);\n  expect(res.body.message).to.be.eq('Token de acesso ausente, inválido, expirado ou usuário do token não existe mais');\n});",
                  "err": {},
                  "uuid": "6c7a4019-b9fe-48bc-b1c1-e53c2f7039fa",
                  "parentUUID": "7e788c86-df7f-4ecb-bbab-3c268b82b6f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "CTFN20 - Deve falhar em cancelar a compra e retornar os produtos para o estoque",
                  "fullTitle": "Casos de teste negativos sobre a rota /carrinhos da API Serverest Logar CTFN20 - Deve falhar em cancelar a compra e retornar os produtos para o estoque",
                  "timedOut": null,
                  "duration": 75,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverestNegativo.default.naoCancelarCompra().then(res => {\n  expect(res.status).to.be.eq(401);\n  cy.contractValidation(res, 'delete-carrinhos-cancelar', 401);\n  expect(res.body.message).to.be.eq('Token de acesso ausente, inválido, expirado ou usuário do token não existe mais');\n});",
                  "err": {},
                  "uuid": "f94564e8-7e95-40b3-8baf-1b7cceb8b04c",
                  "parentUUID": "7e788c86-df7f-4ecb-bbab-3c268b82b6f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "98641021-23c8-4359-a92e-d1968b46550b",
                "3e96ccef-3ff7-4c9c-8f34-7e86579e535d",
                "9f549661-025a-41d0-98b6-78c041922300",
                "e842cd72-f558-4fe8-a609-7acbf53423a0",
                "6c7a4019-b9fe-48bc-b1c1-e53c2f7039fa",
                "f94564e8-7e95-40b3-8baf-1b7cceb8b04c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 599,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "5bd87ffd-a88d-4e94-b4b1-760507669697"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 116,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3326cd85-3b86-4079-a080-8346a6173689",
      "title": "",
      "fullFile": "cypress/integration/teste.fluxo.adm.spec.js",
      "file": "cypress/integration/teste.fluxo.adm.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a4db723c-93b8-49c6-96a5-563abb6ccf39",
          "title": "Casos de teste de fluxo para administradores da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1870db69-7a50-4d27-8bed-8b29b3f6552a",
              "title": "CTFP01 - Fluxo de compra",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve cadastrar um novo produto",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP01 - Fluxo de compra Deve cadastrar um novo produto",
                  "timedOut": null,
                  "duration": 175,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _serverest.default.salvarIdProduto(res);\n});",
                  "err": {},
                  "uuid": "32c1d8f7-74d4-4f73-90fe-1a0d208dedb9",
                  "parentUUID": "1870db69-7a50-4d27-8bed-8b29b3f6552a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar produto",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP01 - Fluxo de compra Deve buscar produto",
                  "timedOut": null,
                  "duration": 73,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.localizarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 200);\n});",
                  "err": {},
                  "uuid": "d658db9a-5d11-4bed-b27b-50d5bda68a84",
                  "parentUUID": "1870db69-7a50-4d27-8bed-8b29b3f6552a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir carrinho se existir",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP01 - Fluxo de compra Deve excluir carrinho se existir",
                  "timedOut": null,
                  "duration": 116,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos', 200);\n});",
                  "err": {},
                  "uuid": "e1524a2e-0a87-440c-b4d0-2b42fc02d8f8",
                  "parentUUID": "1870db69-7a50-4d27-8bed-8b29b3f6552a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cadastrar novo carrinho",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP01 - Fluxo de compra Deve cadastrar novo carrinho",
                  "timedOut": null,
                  "duration": 110,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarCarrinhoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-carrinhos', 201);\n  _serverest.default.salvarIdCarrinho(res);\n});",
                  "err": {},
                  "uuid": "1c87c08f-8022-4fab-b4d0-bb5c9e4cf195",
                  "parentUUID": "1870db69-7a50-4d27-8bed-8b29b3f6552a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve concluir compra",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP01 - Fluxo de compra Deve concluir compra",
                  "timedOut": null,
                  "duration": 91,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.finalizarCompra().then(res => {\n  cy.contractValidation(res, 'delete-carrinhos', 200);\n});",
                  "err": {},
                  "uuid": "28b03d49-4ad9-4ca7-9c28-47dc2291e2c3",
                  "parentUUID": "1870db69-7a50-4d27-8bed-8b29b3f6552a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "32c1d8f7-74d4-4f73-90fe-1a0d208dedb9",
                "d658db9a-5d11-4bed-b27b-50d5bda68a84",
                "e1524a2e-0a87-440c-b4d0-2b42fc02d8f8",
                "1c87c08f-8022-4fab-b4d0-bb5c9e4cf195",
                "28b03d49-4ad9-4ca7-9c28-47dc2291e2c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 565,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c5a4da95-c274-405f-8eeb-33365e0723f7",
              "title": "CTFP02 - Fluxo de edição de produto",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve cadastrar um novo produto",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP02 - Fluxo de edição de produto Deve cadastrar um novo produto",
                  "timedOut": null,
                  "duration": 77,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _serverest.default.salvarIdProduto(res);\n});",
                  "err": {},
                  "uuid": "77a93fbb-67a6-4caf-8781-3ce28cc38ad8",
                  "parentUUID": "c5a4da95-c274-405f-8eeb-33365e0723f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar produto",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP02 - Fluxo de edição de produto Deve buscar produto",
                  "timedOut": null,
                  "duration": 69,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.localizarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 200);\n});",
                  "err": {},
                  "uuid": "39ccc5df-664e-45d3-95f9-8bda92109dce",
                  "parentUUID": "c5a4da95-c274-405f-8eeb-33365e0723f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve editar o produto",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP02 - Fluxo de edição de produto Deve editar o produto",
                  "timedOut": null,
                  "duration": 73,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProduto().then(res => {\n  cy.contractValidation(res, 'put-produtos-by-id', 200);\n  expect(res.body.message).to.be.eq('Registro alterado com sucesso');\n  _serverest.default.salvarIdProduto(res);\n});",
                  "err": {},
                  "uuid": "534b1226-ebb0-4d5e-b492-761945a182a3",
                  "parentUUID": "c5a4da95-c274-405f-8eeb-33365e0723f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "77a93fbb-67a6-4caf-8781-3ce28cc38ad8",
                "39ccc5df-664e-45d3-95f9-8bda92109dce",
                "534b1226-ebb0-4d5e-b492-761945a182a3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 219,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2ad77509-ecc8-4a1a-9a91-3d2b88c2da04",
              "title": "CTFP03 - Fluxo de exclusão de produto",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve cadastrar um novo produto",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP03 - Fluxo de exclusão de produto Deve cadastrar um novo produto",
                  "timedOut": null,
                  "duration": 73,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'post-produtos', 201);\n  _serverest.default.salvarIdProduto(res);\n});",
                  "err": {},
                  "uuid": "6d7b6247-5a79-4f71-9454-91febfbac83d",
                  "parentUUID": "2ad77509-ecc8-4a1a-9a91-3d2b88c2da04",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar produto",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP03 - Fluxo de exclusão de produto Deve buscar produto",
                  "timedOut": null,
                  "duration": 67,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.localizarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'get-produtos-by-id', 200);\n});",
                  "err": {},
                  "uuid": "c06fa34f-9abb-4540-8de4-c6e1321a35c2",
                  "parentUUID": "2ad77509-ecc8-4a1a-9a91-3d2b88c2da04",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir produto",
                  "fullTitle": "Casos de teste de fluxo para administradores da API Serverest CTFP03 - Fluxo de exclusão de produto Deve excluir produto",
                  "timedOut": null,
                  "duration": 92,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoComSucesso().then(res => {\n  cy.contractValidation(res, 'delete-produtos-by-id', 200);\n});",
                  "err": {},
                  "uuid": "eb61d284-4b42-4daa-8db9-58286e5a4881",
                  "parentUUID": "2ad77509-ecc8-4a1a-9a91-3d2b88c2da04",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d7b6247-5a79-4f71-9454-91febfbac83d",
                "c06fa34f-9abb-4540-8de4-c6e1321a35c2",
                "eb61d284-4b42-4daa-8db9-58286e5a4881"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 232,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7ac6a969-d6d7-400a-a39f-571140b71408",
      "title": "",
      "fullFile": "cypress/integration/1.login.spec.js",
      "file": "cypress/integration/1.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d93b811-f69c-44ae-a11f-ac33774c8428",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CTFP01 - Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest CTFP01 - Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 451,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    cy.contractValidation(res, 'post-login', 200);\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "d1a8ae7c-a687-487a-a791-f406608e734c",
              "parentUUID": "4d93b811-f69c-44ae-a11f-ac33774c8428",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d1a8ae7c-a687-487a-a791-f406608e734c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 451,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}